/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.clothing.store.manager.view;

import com.mycompany.clothing.store.manager.controller.ClothingController;
import com.mycompany.clothing.store.manager.domain.Clothing;
import com.mycompany.clothing.store.manager.domain.dto.ClothingResponseDTO;
import com.mycompany.clothing.store.manager.domain.dto.ShirtResponseDTO;
import com.mycompany.clothing.store.manager.domain.enums.ClothingPiece;
import jakarta.persistence.EntityManager;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moise
 */
public class Table extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Table.class.getName());

    /**
     * Creates new form Remove
     * @param em
     */
    public Table(EntityManager em) {
        initComponents();
        this.em = em;
        this.clothingController = new ClothingController(em);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1480, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void fillTable(List<ClothingResponseDTO> list) {
        DefaultTableModel model = new DefaultTableModel();

        if (list.getFirst() instanceof ShirtResponseDTO) {
            model.addColumn("ID");
            model.addColumn("COR");
            model.addColumn("VALOR");
            model.addColumn("QUANTIDADE");
            model.addColumn("MARCA");
            model.addColumn("TAMANHO");
            model.addColumn("GENERO");
            model.addColumn("TIPO DE FECHAMENTO");
            model.addColumn("TIPO DE ROUPA");
            model.addColumn("ESTAMPA");
            model.addColumn("TECIDO");
            model.addColumn("QUANTIDADE DE BOLSOS");
            model.addColumn("GOLA");
            model.addColumn("MANGA");

            for (ClothingResponseDTO data : list) {
                ShirtResponseDTO shirtData = (ShirtResponseDTO) data;
                model.addRow(new Object[]{
                    shirtData.id(),
                    shirtData.color(),
                    shirtData.price(),
                    shirtData.quantity(),
                    shirtData.brand(),
                    shirtData.size(),
                    shirtData.gender(),
                    shirtData.closureType(),
                    shirtData.clothingType(),
                    shirtData.pattern(),
                    shirtData.fabric(),
                    shirtData.pocket(),
                    shirtData.collar(),
                    shirtData.sleeve()
                });
            }
            jTable1.setModel(model);
        }
    }

    public void viewAllClothing(ClothingPiece piece) {
        List<ClothingResponseDTO> list = clothingController.viewAll(piece);
        fillTable(list);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    public EntityManager em;
    public ClothingController clothingController;
}
